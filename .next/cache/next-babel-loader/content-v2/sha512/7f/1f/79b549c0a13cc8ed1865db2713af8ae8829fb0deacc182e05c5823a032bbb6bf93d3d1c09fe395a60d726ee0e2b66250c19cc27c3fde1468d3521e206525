{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useFunctions } from \"./useFunctions\";\nexport function useGraphFunctions() {\n  _s();\n\n  const [useGraph] = useFunctions();\n  const {\n    0: expence,\n    1: setExpence\n  } = useState();\n  const {\n    0: months,\n    1: setMonths\n  } = useState();\n  const {\n    0: january,\n    1: setJanuary\n  } = useState();\n  const {\n    0: february,\n    1: setFebruary\n  } = useState();\n  const {\n    0: march,\n    1: setMarch\n  } = useState();\n  const {\n    0: april,\n    1: setApril\n  } = useState();\n  const {\n    0: may,\n    1: setMay\n  } = useState();\n  const {\n    0: june,\n    1: setJune\n  } = useState();\n  const {\n    0: july,\n    1: setJuly\n  } = useState();\n  const {\n    0: august,\n    1: setAugust\n  } = useState();\n  const {\n    0: september,\n    1: setSeptember\n  } = useState();\n  const {\n    0: october,\n    1: setOctober\n  } = useState();\n  const {\n    0: november,\n    1: setNovember\n  } = useState();\n  const {\n    0: december,\n    1: setDecember\n  } = useState();\n  let expenceArray = [];\n  let expenceMonths = [];\n  let januaryList = [];\n  let februaryList = [];\n  let marchList = [];\n  let aprilList = [];\n  let mayList = [];\n  let juneList = [];\n  let julyList = [];\n  let augustList = [];\n  let septemberList = [];\n  let octoberList = [];\n  let novemberList = [];\n  let decemberList = [];\n  useEffect(() => {\n    // expenceの中身を配列の中に保管する\n    if (useGraph.budget) {\n      useGraph.budget.map(Field => {\n        Field.type === \"exp\" && expenceArray.push(Field);\n      });\n      setExpence(expenceArray);\n    }\n  }, [useGraph.budget]);\n  useEffect(() => {\n    //その月の支出を追加する。\n    if (expence) {\n      expence.map(Field => expenceMonths.push({\n        selectedMonth: Field.day.toDate().getMonth() + 1,\n        Field\n      }));\n    }\n\n    setMonths(expenceMonths);\n  }, [expence]);\n  useEffect(() => {\n    if (months !== null && months !== void 0 && months.length) {\n      months.map(e => e.selectedMonth === 1 && januaryList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 2 && februaryList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 3 && marchList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 4 && aprilList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 5 && mayList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 6 && juneList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 7 && julyList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 8 && augustList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 9 && septemberList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 10 && octoberList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 11 && novemberList.push(e.Field.money));\n      months.map(e => e.selectedMonth === 12 && decemberList.push(e.Field.money));\n    }\n\n    const reducer = (sum, currentValue) => sum + currentValue;\n\n    if (januaryList.length) {\n      setJanuary(januaryList.reduce(reducer));\n    }\n\n    if (februaryList.length) {\n      setFebruary(februaryList.reduce(reducer));\n    }\n\n    if (marchList.length) {\n      setMarch(marchList.reduce(reducer));\n    }\n\n    if (aprilList.length) {\n      setApril(aprilList.reduce(reducer));\n    }\n\n    if (mayList.length) {\n      setMay(mayList.reduce(reducer));\n    }\n\n    if (juneList.length) {\n      setJune(juneList.reduce(reducer));\n    }\n\n    if (julyList.length) {\n      setJuly(julyList.reduce(reducer));\n    }\n\n    if (augustList.length) {\n      setAugust(augustList.reduce(reducer));\n    }\n\n    if (septemberList.length) {\n      setSeptember(septemberList.reduce(reducer));\n    }\n\n    if (octoberList.length) {\n      setOctober(octoberList.reduce(reducer));\n    }\n\n    if (novemberList.length) {\n      setNovember(novemberList.reduce(reducer));\n    }\n\n    if (decemberList.length) {\n      setDecember(decemberList.reduce(reducer));\n    }\n  }, [months]);\n  return [{\n    january,\n    february,\n    march,\n    april,\n    may,\n    june,\n    july,\n    august,\n    september,\n    october,\n    november,\n    december\n  }];\n}\n\n_s(useGraphFunctions, \"7i4f7otXP6AR6EjBeIcew7o4Vc4=\", false, function () {\n  return [useFunctions];\n});","map":{"version":3,"sources":["/Users/yoko/Desktop/YOKOHAMABANK/src/functions/useGraphFunctions.tsx"],"names":["useState","useEffect","useFunctions","useGraphFunctions","useGraph","expence","setExpence","months","setMonths","january","setJanuary","february","setFebruary","march","setMarch","april","setApril","may","setMay","june","setJune","july","setJuly","august","setAugust","september","setSeptember","october","setOctober","november","setNovember","december","setDecember","expenceArray","expenceMonths","januaryList","februaryList","marchList","aprilList","mayList","juneList","julyList","augustList","septemberList","octoberList","novemberList","decemberList","budget","map","Field","type","push","selectedMonth","day","toDate","getMonth","length","e","money","reducer","sum","currentValue","reduce"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"../config/firebase\";\nimport { useFunctions } from \"./useFunctions\";\nimport { moneyField } from \"../components/pages/Home\";\nexport function useGraphFunctions() {\n  const [useGraph] = useFunctions();\n  const [expence, setExpence] = useState<moneyField[]>();\n  const [months, setMonths] = useState<any[]>();\n  const [january, setJanuary] = useState<number>();\n  const [february, setFebruary] = useState<number>();\n  const [march, setMarch] = useState<number>();\n  const [april, setApril] = useState<number>();\n  const [may, setMay] = useState<number>();\n  const [june, setJune] = useState<number>();\n  const [july, setJuly] = useState<number>();\n  const [august, setAugust] = useState<number>();\n  const [september, setSeptember] = useState<number>();\n  const [october, setOctober] = useState<number>();\n  const [november, setNovember] = useState<number>();\n  const [december, setDecember] = useState<number>();\n  let expenceArray: moneyField[] = [];\n  let expenceMonths: any[] = [];\n  let januaryList: number[] = [];\n  let februaryList: number[] = [];\n  let marchList: number[] = [];\n  let aprilList: number[] = [];\n  let mayList: number[] = [];\n  let juneList: number[] = [];\n  let julyList: number[] = [];\n  let augustList: number[] = [];\n  let septemberList: number[] = [];\n  let octoberList: number[] = [];\n  let novemberList: number[] = [];\n  let decemberList: number[] = [];\n  useEffect(() => {\n    // expenceの中身を配列の中に保管する\n    if (useGraph.budget) {\n      useGraph.budget.map((Field: moneyField) => {\n        Field.type === \"exp\" && expenceArray.push(Field);\n      });\n      setExpence(expenceArray);\n    }\n  }, [useGraph.budget]);\n\n  useEffect(() => {\n    //その月の支出を追加する。\n    if (expence) {\n      expence.map((Field: moneyField) =>\n        expenceMonths.push({\n          selectedMonth: Field.day.toDate().getMonth() + 1,\n          Field,\n        })\n      );\n    }\n\n    setMonths(expenceMonths);\n  }, [expence]);\n\n  useEffect(() => {\n    if (months?.length) {\n      months.map(\n        (e) => e.selectedMonth === 1 && januaryList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 2 && februaryList.push(e.Field.money)\n      );\n      months.map((e) => e.selectedMonth === 3 && marchList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 4 && aprilList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 5 && mayList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 6 && juneList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 7 && julyList.push(e.Field.money));\n      months.map(\n        (e) => e.selectedMonth === 8 && augustList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 9 && septemberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 10 && octoberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 11 && novemberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 12 && decemberList.push(e.Field.money)\n      );\n    }\n\n    const reducer = (sum: number, currentValue: number) => sum + currentValue;\n    if (januaryList.length) {\n      setJanuary(januaryList.reduce(reducer));\n    }\n    if (februaryList.length) {\n      setFebruary(februaryList.reduce(reducer));\n    }\n    if (marchList.length) {\n      setMarch(marchList.reduce(reducer));\n    }\n    if (aprilList.length) {\n      setApril(aprilList.reduce(reducer));\n    }\n    if (mayList.length) {\n      setMay(mayList.reduce(reducer));\n    }\n    if (juneList.length) {\n      setJune(juneList.reduce(reducer));\n    }\n    if (julyList.length) {\n      setJuly(julyList.reduce(reducer));\n    }\n    if (augustList.length) {\n      setAugust(augustList.reduce(reducer));\n    }\n    if (septemberList.length) {\n      setSeptember(septemberList.reduce(reducer));\n    }\n    if (octoberList.length) {\n      setOctober(octoberList.reduce(reducer));\n    }\n    if (novemberList.length) {\n      setNovember(novemberList.reduce(reducer));\n    }\n    if (decemberList.length) {\n      setDecember(decemberList.reduce(reducer));\n    }\n  }, [months]);\n  return [\n    {\n      january,\n      february,\n      march,\n      april,\n      may,\n      june,\n      july,\n      august,\n      september,\n      october,\n      november,\n      december,\n    },\n  ] as const;\n}\n"]},"metadata":{},"sourceType":"module"}