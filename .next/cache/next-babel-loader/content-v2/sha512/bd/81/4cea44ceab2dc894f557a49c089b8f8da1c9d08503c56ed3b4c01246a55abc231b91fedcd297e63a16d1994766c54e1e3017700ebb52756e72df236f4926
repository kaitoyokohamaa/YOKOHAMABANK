{"ast":null,"code":"var _jsxFileName = \"/Users/yoko/Desktop/YOKOHAMABANK/src/pages/Home/tabel.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { EditableFields } from \"./editableFields\";\nimport Pegination from \"components/molecules/pagination\";\nimport styles from \"./tabel.module.css\";\nexport const Tabel = ({\n  budget\n}) => {\n  _s();\n\n  const numEachPage = 4;\n  const {\n    0: minValue,\n    1: setMinValue\n  } = useState(0);\n  const {\n    0: maxValue,\n    1: setMaxValue\n  } = useState(numEachPage);\n  const {\n    0: maxNum,\n    1: setMaxNum\n  } = useState(0);\n  useEffect(() => {\n    if (budget) {\n      setMaxNum(budget.length);\n    }\n  }, [budget]);\n\n  const handleChange = value => {\n    setMinValue((value - 1) * numEachPage);\n    setMaxValue(value * numEachPage);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"table\", {\n    className: styles.styledTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(\"tr\", {\n    className: styles.styledTr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"\\u65E5\\u4ED8\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"\\u5185\\u5BB9\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"\\u91D1\\u984D\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"_\\u03C6(\\uFF65_\\uFF65\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"\\u524A\\u9664\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, budget && budget.slice(minValue, maxValue).map(t => {\n    const CurrentMonth = t.day.toDate().getMonth() + 1;\n    const CurrentDay = t.day.toDate().getDate();\n    const Curentdate = `${CurrentMonth}月${CurrentDay}日`;\n    return __jsx(\"tr\", {\n      key: t.id,\n      className: styles.styledTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, __jsx(EditableFields, {\n      day: Curentdate,\n      id: t.id || \"0\",\n      description: t.description,\n      money: t.money,\n      createdAt: t.createdAt,\n      type: t.type,\n      category: t.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }));\n  }))), __jsx(Pegination, {\n    onChange: handleChange,\n    numEachPage: numEachPage,\n    maxNum: maxNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Tabel, \"eBFIIJqdFYcFbI/BdG8cy478va0=\");\n\n_c = Tabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabel\");","map":{"version":3,"sources":["/Users/yoko/Desktop/YOKOHAMABANK/src/pages/Home/tabel.tsx"],"names":["React","useState","useEffect","EditableFields","Pegination","styles","Tabel","budget","numEachPage","minValue","setMinValue","maxValue","setMaxValue","maxNum","setMaxNum","length","handleChange","value","styledTable","styledTr","slice","map","t","CurrentMonth","day","toDate","getMonth","CurrentDay","getDate","Curentdate","id","description","money","createdAt","type","category"],"mappings":"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","sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\nimport { EditableFields } from \"./editableFields\";\nimport { moneyField } from \"./index\";\nimport Pegination from \"components/molecules/pagination\";\nimport styles from \"./tabel.module.css\";\n\nexport const Tabel: FC<firebase.firestore.DocumentData> = ({ budget }) => {\n  const numEachPage = 4;\n  const [minValue, setMinValue] = useState<number>(0);\n  const [maxValue, setMaxValue] = useState<number>(numEachPage);\n  const [maxNum, setMaxNum] = useState<number>(0);\n  useEffect(() => {\n    if (budget) {\n      setMaxNum(budget.length);\n    }\n  }, [budget]);\n\n  const handleChange = (value: number) => {\n    setMinValue((value - 1) * numEachPage);\n    setMaxValue(value * numEachPage);\n  };\n\n  return (\n    <div>\n      <>\n        <table className={styles.styledTable}>\n          <tbody>\n            <tr className={styles.styledTr}>\n              <th>日付</th>\n              <th>内容</th>\n              <th>金額</th>\n              <th>_φ(･_･</th>\n              <th>削除</th>\n            </tr>\n          </tbody>\n          <tbody>\n            {budget &&\n              budget.slice(minValue, maxValue).map((t: moneyField) => {\n                const CurrentMonth = t.day.toDate().getMonth() + 1;\n                const CurrentDay = t.day.toDate().getDate();\n                const Curentdate: string = `${CurrentMonth}月${CurrentDay}日`;\n\n                return (\n                  <tr key={t.id} className={styles.styledTable}>\n                    <EditableFields\n                      day={Curentdate}\n                      id={t.id || \"0\"}\n                      description={t.description}\n                      money={t.money}\n                      createdAt={t.createdAt}\n                      type={t.type}\n                      category={t.category}\n                    />\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n        <Pegination\n          onChange={handleChange}\n          numEachPage={numEachPage}\n          maxNum={maxNum}\n        />\n      </>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}