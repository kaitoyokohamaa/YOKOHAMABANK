{"ast":null,"code":"var _jsxFileName = \"/Users/yoko/Desktop/YOKOHAMABANK/src/pages/Home/form.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styles from \"./form.module.css\";\nimport firebase from \"../../config/firebase\";\nimport { Modal, Button } from \"antd\";\nimport { useFunctions } from \"../../functions/useFunctions\";\nexport const Form = ({}) => {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const {\n    0: type,\n    1: setType\n  } = useState(\"exp\");\n  const {\n    0: money,\n    1: setMoney\n  } = useState(0);\n  const {\n    0: date,\n    1: setDate\n  } = useState(new Date());\n  const {\n    0: getBankID,\n    1: setGetBankID\n  } = useState();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [functionContents] = useFunctions();\n  const currentUserId = functionContents.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  useEffect(() => {\n    ref.onSnapshot(usersDocs => {\n      usersDocs.forEach(contens => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  const dateChange = date => {\n    const detailDate = date;\n    setDate(detailDate);\n  };\n\n  const submitHandler = () => {\n    if (text.trim() !== \"\") {\n      const sendMoney = {\n        money,\n        description: text,\n        type,\n        createdAt: firebase.firestore.Timestamp.now(),\n        day: date,\n        id: uuidv1(),\n        category: \"\"\n      };\n\n      if (getBankID) {\n        ref.doc(getBankID).collection(\"bank\").add(sendMoney);\n        setText(\"\");\n        setMoney(0);\n        setOpen(false);\n      }\n    } else {\n      alert(\"本文が入力されてません\");\n    }\n  };\n\n  const month = date.getMonth() + 1;\n  const currentDay = date.getDate();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"\\u652F\\u51FA\\u8FFD\\u52A0\"), __jsx(Modal, {\n    visible: open,\n    onCancel: handleClose,\n    footer: [__jsx(Button, {\n      key: \"submit\",\n      type: \"default\",\n      onClick: submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.modalFormArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(DatePicker, {\n    onChange: dateChange,\n    className: styles.calendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), month, \"\\u6708\", currentDay, \"\\u65E5\"), __jsx(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: styles.styledInput,\n    type: \"text\",\n    placeholder: \"Add description\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), __jsx(\"input\", {\n    className: styles.styledInput,\n    type: \"number\",\n    placeholder: \"200\",\n    value: money,\n    onChange: event => {\n      const moneyStore = Number(event.target.value);\n      setMoney(moneyStore);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/yoko/Desktop/YOKOHAMABANK/src/pages/Home/form.tsx"],"names":["React","useState","useEffect","v1","uuidv1","DatePicker","styles","firebase","Modal","Button","useFunctions","Form","text","setText","type","setType","money","setMoney","date","setDate","Date","getBankID","setGetBankID","open","setOpen","handleOpen","handleClose","functionContents","currentUserId","ref","firestore","collection","onSnapshot","usersDocs","forEach","contens","data","userID","includes","bankID","id","dateChange","detailDate","submitHandler","trim","sendMoney","description","createdAt","Timestamp","now","day","category","doc","add","alert","month","getMonth","currentDay","getDate","modalFormArea","calendar","flex","styledInput","event","target","value","moneyStore","Number"],"mappings":"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","sourcesContent":["import React, { useState, FC, useEffect } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styles from \"./form.module.css\";\nimport firebase from \"../../config/firebase\";\nimport { moneyField } from \"./index\";\n\nimport { Modal, Button } from \"antd\";\nimport { useFunctions } from \"../../functions/useFunctions\";\nexport const Form: FC = ({}) => {\n  const [text, setText] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"exp\");\n  const [money, setMoney] = useState<number>(0);\n  const [date, setDate] = useState(new Date());\n  const [getBankID, setGetBankID] = useState<string>();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [functionContents] = useFunctions();\n  const currentUserId = functionContents.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  const dateChange = (date: Date) => {\n    const detailDate = date;\n    setDate(detailDate);\n  };\n\n  const submitHandler = () => {\n    if (text.trim() !== \"\") {\n      const sendMoney: moneyField = {\n        money,\n        description: text,\n        type,\n        createdAt: firebase.firestore.Timestamp.now(),\n        day: date,\n        id: uuidv1(),\n        category: \"\",\n      };\n      if (getBankID) {\n        ref.doc(getBankID).collection(\"bank\").add(sendMoney);\n        setText(\"\");\n        setMoney(0);\n        setOpen(false);\n      }\n    } else {\n      alert(\"本文が入力されてません\");\n    }\n  };\n\n  const month = date.getMonth() + 1;\n  const currentDay = date.getDate();\n  return (\n    <div>\n      <Button onClick={handleOpen}>支出追加</Button>\n      <Modal\n        visible={open}\n        onCancel={handleClose}\n        footer={[\n          <Button key=\"submit\" type=\"default\" onClick={submitHandler}>\n            投稿する\n          </Button>,\n        ]}\n      >\n        <div className={styles.modalFormArea}>\n          <div>\n            <DatePicker onChange={dateChange} className={styles.calendar} />\n            {month}月{currentDay}日\n          </div>\n          <div className={styles.flex}>\n            <div>\n              <input\n                className={styles.styledInput}\n                type=\"text\"\n                placeholder=\"Add description\"\n                value={text}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setText(event.target.value);\n                }}\n              />\n              <input\n                className={styles.styledInput}\n                type=\"number\"\n                placeholder=\"200\"\n                value={money}\n                onChange={(\n                  event: React.ChangeEvent<\n                    HTMLTextAreaElement | HTMLInputElement\n                  >\n                ) => {\n                  const moneyStore: number = Number(event.target.value);\n                  setMoney(moneyStore);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}