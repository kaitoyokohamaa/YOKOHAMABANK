{"version":3,"sources":["components/pages/Home/home.module.css","components/organisms/Header/header.module.css","components/pages/Home/tabel.module.css","components/pages/Graph/graph.module.css","components/atoms/Spinner/spinner.module.css","firebase.tsx","functions/useFunctions.tsx","components/pages/Home/form.tsx","components/atoms/Logo/index.tsx","components/organisms/Header/index.tsx","functions/useGetUid.tsx","components/pages/Home/tabelContentsDay.tsx","components/pages/Home/tabelContentsDescription.tsx","components/pages/Home/tabelContentsMoney.tsx","components/pages/Home/tabelContentsCategory.tsx","components/pages/Home/tabelContentsDelete.tsx","components/pages/Home/editableFields.tsx","components/pages/Home/tabel.tsx","components/pages/Graph/index.tsx","functions/useGraphFunctions.tsx","components/pages/Home/index.tsx","components/atoms/Spinner/index.tsx","functions/useAuthentication.tsx","components/pages/Signup/index.tsx","components/pages/Signin/index.tsx","App.tsx","index.tsx","components/pages/Home/form.module.css","components/pages/Signup/signup.module.css","components/pages/Signin/signin.module.css"],"names":["module","exports","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","useFunctions","useState","budget","setBudget","income","setIncome","expence","setExpence","totalBudget","setTotalBudget","currentUserId","setCurrentUserId","bankID","setbankID","month","Date","getMonth","ref","firestore","collection","reducer","sum","currentValue","useEffect","auth","onAuthStateChanged","usr","a","myUid","uid","where","onSnapshot","querySnapshot","forEach","bankFields","id","doc","orderBy","storeBudget","storeIncome","storeExpence","docs","showBudget","data","push","type","day","toDate","incomeMoney","money","sumMoney","reduce","expenceMoney","decMoney","Form","text","setText","setType","setMoney","date","setDate","getBankID","setGetBankID","open","setOpen","usersDocs","contens","userID","includes","currentDay","getDate","onClick","visible","onCancel","aria-labelledby","aria-describedby","className","styles","modalFormArea","modalFormH1","coment","onChange","calendar","flex","value","event","target","styledInput","placeholder","moneyStore","Number","center","styledBtn","trim","sendMoney","description","createdAt","Timestamp","now","uuidv1","category","add","alert","index","style","color","paddingLeft","Index","header","linkWrap","link","to","signOut","useGetUid","TabelContentsArea","props","isEditing","setIsEditing","isHover","setIsHover","changedDay","setChangedDay","getUserFiledsID","setGetUserFiledsID","userDocs","userContents","onMouseEnter","onMouseLeave","EditOutlined","required","styledButton","update","setTimeout","changedDescription","setChangedDescription","autoFocus","e","changedMoney","setChangedMoney","changedCategory","setChangedCategory","confirm","Modal","DeleteOutlined","title","onOk","delete","console","log","EditableFields","Tabel","styledTable","styledTr","map","t","CurrentMonth","CurrentDay","Curentdate","key","Graph","useGraph","months","setMonths","january","setJanuary","february","setFebruary","march","setMarch","april","setApril","may","setMay","june","setJune","july","setJuly","august","setAugust","september","setSeptember","october","setOctober","november","setNovember","december","setDecember","expenceArray","expenceMonths","januaryList","februaryList","marchList","aprilList","mayList","juneList","julyList","augustList","septemberList","octoberList","novemberList","decemberList","Field","selectedMonth","length","useGraphFunctions","getExpenceMonth","dataGraph","支出","graph","width","height","margin","top","right","bottom","left","dataKey","stroke","barSize","fillOpacity","fill","Home","functionsHome","Fragment","home","homeHeader","body","Expenses","start","end","duration","separator","formArea","Spinner","loader","useAuthentication","history","useHistory","checkAuthentication","loading","setLoading","useAuthenticationContents","initialValues","email","password","validationSchema","Yup","shape","min","onSubmit","fields","createUserWithEmailAndPassword","then","res","myUserID","user","name","catch","err","errors","touched","formWrap","FormControl","form","FormLabel","htmlFor","formimput","component","invalid","Button","variantColor","register","signInWithEmailAndPassword","App","ThemeProvider","theme","exact","path","SignUp","SignIn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bec207e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__2sljt\",\"homeHeader\":\"home_homeHeader__3YDvN\",\"body\":\"home_body__1HsEX\",\"formArea\":\"home_formArea__25Vpp\",\"modalFormArea\":\"home_modalFormArea__1iYMp\",\"modalFormH1\":\"home_modalFormH1__3pgRb\",\"totalIncome\":\"home_totalIncome__1qGcG\",\"Expenses\":\"home_Expenses__1DzCp\",\"expence\":\"home_expence__2lSnr\",\"income\":\"home_income__1-_ta\",\"delete\":\"home_delete__2Y1hw\",\"List\":\"home_List__2jEcE\",\"tab\":\"home_tab__2Xcsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2IyQv\",\"linkWrap\":\"header_linkWrap__32IDx\",\"link\":\"header_link__k9dCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styledTable\":\"tabel_styledTable__lJnSw\",\"styledTr\":\"tabel_styledTr__3DPhL\",\"activeRow\":\"tabel_activeRow__200GZ\",\"styledh1\":\"tabel_styledh1__3mV_w\",\"styledButton\":\"tabel_styledButton__3JMPN\",\"styledInput\":\"tabel_styledInput__2JfB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"graph_graph__2DoHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__29uiQ\",\"float\":\"spinner_float__1PkYm\"};","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst app = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n};\nfirebase.initializeApp(app);\nexport const db = firebase.firestore();\n\nexport default firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\n\nexport function useFunctions() {\n  const [budget, setBudget] = useState<firebase.firestore.DocumentData>();\n  const [income, setIncome] = useState<number>();\n  const [expence, setExpence] = useState<number>();\n  const [totalBudget, setTotalBudget] = useState<number>();\n  const [currentUserId, setCurrentUserId] = useState<number | string>();\n  const [bankID, setbankID] = useState<string>();\n  const d = new Date();\n  const month = d.getMonth() + 1;\n  const ref = firebase.firestore().collection(\"User\");\n\n  const reducer = (sum: number, currentValue: number) => sum + currentValue;\n  // 自分のユーザー登録をしているDocsの取得\n  useEffect(() => {\n    return firebase\n      .auth()\n      .onAuthStateChanged(async (usr: firebase.User | null) => {\n        if (!usr) {\n        } else {\n          // 今ログインをしている人のuidを確認する→このuidを元に自分の登録した中身を参照する。\n          const myUid = usr.uid;\n          setCurrentUserId(myUid);\n          // 自分のuidを参考にdocIDの取得\n          ref\n            .where(\"userID\", \"array-contains\", myUid)\n            .onSnapshot((querySnapshot: firebase.firestore.QuerySnapshot) => {\n              querySnapshot.forEach((bankFields) => {\n                setbankID(bankFields.id);\n              });\n            });\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (bankID) {\n      // 自分が保存した中身を取得する。\n      ref\n        .doc(bankID)\n        .collection(\"bank\")\n        .orderBy(\"createdAt\", \"desc\")\n        .onSnapshot((querySnapshot: firebase.firestore.DocumentData) => {\n          let storeBudget: firebase.firestore.DocumentData[] = [];\n          let storeIncome: number[] = [];\n          let storeExpence: number[] = [];\n          querySnapshot.forEach((docs: firebase.firestore.DocumentData) => {\n            const showBudget = docs.data();\n            storeBudget.push(showBudget);\n\n            //収入の中身を足す\n            if (\n              showBudget.type === \"inc\" &&\n              showBudget.day.toDate().getMonth() + 1 === month\n            ) {\n              const incomeMoney: number = showBudget.money;\n              storeIncome.push(incomeMoney);\n              const sumMoney = storeIncome.reduce(reducer);\n              //足された収入の中身をstateで管理\n              setIncome(sumMoney);\n            }\n            //支出の中身を足す\n            else if (\n              showBudget.type === \"exp\" &&\n              showBudget.day.toDate().getMonth() + 1 === month\n            ) {\n              const expenceMoney: number = showBudget.money;\n              storeExpence.push(expenceMoney);\n              const decMoney = storeExpence.reduce(reducer);\n              //足された支出の中身をstateで管理\n              setExpence(decMoney);\n            }\n          });\n\n          if (storeBudget) {\n            setBudget(storeBudget);\n          }\n        });\n    }\n  }, [bankID]);\n\n  // 収入と支出を足す\n  useEffect(() => {\n    if (income && expence) {\n      setTotalBudget(income - expence);\n    }\n  }, [income, expence]);\n\n  return [\n    {\n      bankID,\n      totalBudget,\n      income,\n      expence,\n      budget,\n      setBudget,\n      setExpence,\n      currentUserId,\n    },\n  ] as const;\n}\n","import React, { useState, FC, useEffect } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styles from \"./form.module.css\";\nimport firebase from \"../../../firebase\";\nimport { moneyField } from \"./index\";\n\nimport { Modal, Button } from \"antd\";\nimport { useFunctions } from \"../../../functions/useFunctions\";\nexport const Form: FC = ({}) => {\n  const [text, setText] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"exp\");\n  const [money, setMoney] = useState<number>(0);\n  const [date, setDate] = useState(new Date());\n  const [getBankID, setGetBankID] = useState<string>();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [functionContents] = useFunctions();\n  const currentUserId = functionContents.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  const dateChange = (date: Date) => {\n    const detailDate = date;\n    setDate(detailDate);\n  };\n\n  const submitHandler = () => {\n    if (text.trim() !== \"\") {\n      const sendMoney: moneyField = {\n        money,\n        description: text,\n        type,\n        createdAt: firebase.firestore.Timestamp.now(),\n        day: date,\n        id: uuidv1(),\n        category: \"\",\n      };\n      if (getBankID) {\n        ref.doc(getBankID).collection(\"bank\").add(sendMoney);\n        setText(\"\");\n        setMoney(0);\n        setOpen(false);\n      }\n    } else {\n      alert(\"本文が入力されてません\");\n    }\n  };\n\n  const month = date.getMonth() + 1;\n  const currentDay = date.getDate();\n  return (\n    <div>\n      <Button onClick={handleOpen}>Add Money</Button>\n      <Modal\n        visible={open}\n        onCancel={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={styles.modalFormArea}>\n          <h1 className={styles.modalFormH1}>Let's Add Money</h1>\n          <div>\n            <span className={styles.coment}>Day</span>\n            <DatePicker onChange={dateChange} className={styles.calendar} />\n            {month}月{currentDay}日\n          </div>\n          <div className={styles.flex}>\n            <div>\n              <select\n                value={type}\n                onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                  setType(event.target.value);\n                }}\n              >\n                <option value=\"exp\">-</option>\n              </select>\n            </div>\n            <div>\n              <input\n                className={styles.styledInput}\n                type=\"text\"\n                placeholder=\"Add description\"\n                value={text}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setText(event.target.value);\n                }}\n              />\n              <input\n                className={styles.styledInput}\n                type=\"number\"\n                placeholder=\"200\"\n                value={money}\n                onChange={(\n                  event: React.ChangeEvent<\n                    HTMLTextAreaElement | HTMLInputElement\n                  >\n                ) => {\n                  const moneyStore: number = Number(event.target.value);\n                  setMoney(moneyStore);\n                }}\n              />\n            </div>\n          </div>\n          <div className={styles.center}>\n            <button className={styles.styledBtn} onClick={submitHandler}>\n              Save\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport default function index() {\n    return (\n        <div style={{ color: \"#fff\", paddingLeft: \"10px\" }}>\n            kaikai\n        </div>\n    )\n}\n","import React from \"react\";\nimport Logo from \"../../atoms/Logo\";\nimport styles from \"./header.module.css\";\nimport { Link } from \"react-router-dom\";\nimport * as firebase from \"firebase/app\";\n\nexport default function Index() {\n  const logOut = () => {\n    alert(\"ログアウトします\");\n    firebase.auth().signOut();\n  };\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <Logo />\n        <div className={styles.linkWrap}>\n          <li>\n            <Link className={styles.link} to={`/home`}>\n              HOME\n            </Link>\n          </li>\n          {/* <li>\n            <Link className={styles.link} to=\"/graph\">\n              グラフ\n            </Link>\n          </li> */}\n          <li>\n            <Link className={styles.link} to=\"/\" onClick={logOut}>\n              {\" \"}\n              LOGOUT\n            </Link>\n          </li>\n        </div>\n      </header>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\n\nexport function useGetUid() {\n  const [currentUserId, setCurrentUserId] = useState<number | string>();\n\n  useEffect(() => {\n    return firebase\n      .auth()\n      .onAuthStateChanged(async (usr: firebase.User | null) => {\n        if (!usr) {\n        } else {\n          const myUid = usr.uid;\n          setCurrentUserId(myUid);\n        }\n      });\n  }, []);\n\n  return [\n    {\n      currentUserId,\n    },\n  ] as const;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\nimport DatePicker from \"react-datepicker\";\nexport default function TabelContentsArea(props: { day: string; id: string }) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [changedDay, setChangedDay] = useState<Date>();\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  const dateChange = (date: Date) => {\n    const detailDate = date;\n    setChangedDay(detailDate);\n  };\n\n  useEffect(() => {\n    let useBankID: string;\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          useBankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ day: changedDay });\n\n    // 保存完了\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.day}\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <DatePicker required onChange={dateChange} className={styles.calendar} />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\nexport default function TabelContentsArea(props: {\n  description: string;\n  id: string;\n}) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [changedDescription, setChangedDescription] = useState<string>(\n    props.description\n  );\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  // ユーザー情報が自分かを確認する\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n  // 自分がアップデートしたい箇所IDを取得する\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    // アップデート開始\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ description: changedDescription });\n    // 保存完了\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.description}\n\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <input\n        autoFocus\n        onChange={(e) => setChangedDescription(e.target.value)}\n        value={changedDescription}\n        className={styles.styledInput}\n      />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\nexport default function TabelContentsArea(props: {\n  money: number;\n  id: string;\n}) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [changedMoney, setChangedMoney] = useState<number>(props.money);\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  useEffect(() => {\n    let useBankID: string;\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          useBankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  // 自分がアップデートしたい箇所IDを取得する\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ money: changedMoney });\n\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.money}\n\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <input\n        autoFocus\n        type=\"number\"\n        onChange={(e) => setChangedMoney(Number(e.target.value))}\n        value={changedMoney}\n        className={styles.styledInput}\n      />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport firebase from \"../../../firebase\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nexport default function TabelContentsArea(props: {\n  category: string;\n  id: string;\n}) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [changedCategory, setChangedCategory] = useState<string>(\n    props.category\n  );\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  // 自分がアップデートしたい箇所IDを取得する\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ category: changedCategory });\n\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.category}\n\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <input\n        required\n        autoFocus\n        onChange={(e) => setChangedCategory(e.target.value)}\n        value={changedCategory}\n        className={styles.styledInput}\n      />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\n\nconst { confirm } = Modal;\nexport default function TabelContentsArea(props: { id: string }) {\n  const [getBankID, setGetBankID] = useState<string>();\n\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  useEffect(() => {\n    let useBankID: string;\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          useBankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    confirm({\n      title: \"Do You Want to delete...?\",\n\n      onOk() {\n        ref.doc(getBankID).collection(\"bank\").doc(getUserFiledsID).delete();\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n  return (\n    <>\n      <th>\n        <DeleteOutlined onClick={handleClick} />\n      </th>\n    </>\n  );\n}\n","import React, { FC } from \"react\";\n\nimport { moneyField } from \"./index\";\nimport TabelContentsDay from \"./tabelContentsDay\";\nimport TabelContentsDescription from \"./tabelContentsDescription\";\nimport TabelContentsMoney from \"./tabelContentsMoney\";\nimport TabelContentsCategory from \"./tabelContentsCategory\";\nimport TabelContentsDelte from \"./tabelContentsDelete\";\nexport const EditableFields: FC<moneyField> = ({\n  day,\n  description,\n  money,\n  category,\n  id,\n}) => {\n  return (\n    <>\n      <TabelContentsDay day={day} id={id} />\n      <TabelContentsDescription description={description} id={id} />\n      <TabelContentsMoney money={money} id={id} />\n      <TabelContentsCategory\n        category={category ? category : \"未記入\"}\n        id={id}\n      />\n      <TabelContentsDelte id={id} />\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { EditableFields } from \"./editableFields\";\nimport { moneyField } from \"./index\";\nimport styles from \"./tabel.module.css\";\n\nexport const Tabel: FC<firebase.firestore.DocumentData> = ({ budget }) => {\n  return (\n    <div>\n      <>\n        <table className={styles.styledTable}>\n          <tbody>\n            <tr className={styles.styledTr}>\n              <th>date</th>\n              <th>Contents</th>\n              <th>Amount of money</th>\n              <th>memo</th>\n              <th>delte</th>\n            </tr>\n          </tbody>\n          <tbody>\n            {budget?.map((t: moneyField) => {\n              const CurrentMonth = t.day.toDate().getMonth() + 1;\n              const CurrentDay = t.day.toDate().getDate();\n              const Curentdate: string = `${CurrentMonth}月${CurrentDay}日`;\n              return (\n                <tr key={t.description} className={styles.styledTable}>\n                  <EditableFields\n                    day={Curentdate}\n                    id={t.id || \"0\"}\n                    description={t.description}\n                    money={t.money}\n                    createdAt={t.createdAt}\n                    type={t.type}\n                    category={t.category}\n                  />\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport styles from \"./graph.module.css\";\nimport { useGraphFunctions } from \"../../../functions/useGraphFunctions\";\nexport default function Graph() {\n  const [getExpenceMonth] = useGraphFunctions();\n\n  const dataGraph = [\n    { month: \"1月\", 支出: getExpenceMonth.january },\n    { month: \"2月\", 支出: getExpenceMonth.february },\n    { month: \"3月\", 支出: getExpenceMonth.march },\n    { month: \"4月\", 支出: getExpenceMonth.april },\n    { month: \"5月\", 支出: getExpenceMonth.may },\n    { month: \"6月\", 支出: getExpenceMonth.june },\n    { month: \"7月\", 支出: getExpenceMonth.july },\n    { month: \"8月\", 支出: getExpenceMonth.august },\n    { month: \"9月\", 支出: getExpenceMonth.september },\n    { month: \"10月\", 支出: getExpenceMonth.october },\n    { month: \"11月\", 支出: getExpenceMonth.november },\n    { month: \"12月\", 支出: getExpenceMonth.december },\n  ];\n  return (\n    <div className={styles.graph}>\n      <h1>Daily Graph</h1>\n      <BarChart\n        width={800}\n        height={280}\n        data={dataGraph}\n        margin={{ top: 20, right: 60, bottom: 0, left: 0 }}\n      >\n        <XAxis dataKey=\"month\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <CartesianGrid stroke=\"gray\" />\n        <Bar //棒グラフ\n          dataKey=\"支出\"\n          barSize={20}\n          stroke=\"gray\"\n          fillOpacity={1}\n          fill=\"pink\"\n        />\n      </BarChart>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nimport { useFunctions } from \"./useFunctions\";\nimport { moneyField } from \"../components/pages/Home\";\nexport function useGraphFunctions() {\n  const [useGraph] = useFunctions();\n  const [expence, setExpence] = useState<moneyField[]>();\n  const [months, setMonths] = useState<any[]>();\n  const [january, setJanuary] = useState<number>();\n  const [february, setFebruary] = useState<number>();\n  const [march, setMarch] = useState<number>();\n  const [april, setApril] = useState<number>();\n  const [may, setMay] = useState<number>();\n  const [june, setJune] = useState<number>();\n  const [july, setJuly] = useState<number>();\n  const [august, setAugust] = useState<number>();\n  const [september, setSeptember] = useState<number>();\n  const [october, setOctober] = useState<number>();\n  const [november, setNovember] = useState<number>();\n  const [december, setDecember] = useState<number>();\n  let expenceArray: moneyField[] = [];\n  let expenceMonths: any[] = [];\n  let januaryList: number[] = [];\n  let februaryList: number[] = [];\n  let marchList: number[] = [];\n  let aprilList: number[] = [];\n  let mayList: number[] = [];\n  let juneList: number[] = [];\n  let julyList: number[] = [];\n  let augustList: number[] = [];\n  let septemberList: number[] = [];\n  let octoberList: number[] = [];\n  let novemberList: number[] = [];\n  let decemberList: number[] = [];\n  useEffect(() => {\n    // expenceの中身を配列の中に保管する\n    if (useGraph.budget) {\n      useGraph.budget.map((Field: moneyField) => {\n        Field.type === \"exp\" && expenceArray.push(Field);\n      });\n      setExpence(expenceArray);\n    }\n  }, [useGraph.budget]);\n\n  useEffect(() => {\n    //その月の支出を追加する。\n    if (expence) {\n      expence.map((Field: moneyField) =>\n        expenceMonths.push({\n          selectedMonth: Field.day.toDate().getMonth() + 1,\n          Field,\n        })\n      );\n    }\n\n    setMonths(expenceMonths);\n  }, [expence]);\n\n  useEffect(() => {\n    if (months?.length) {\n      months.map(\n        (e) => e.selectedMonth === 1 && januaryList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 2 && februaryList.push(e.Field.money)\n      );\n      months.map((e) => e.selectedMonth === 3 && marchList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 4 && aprilList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 5 && mayList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 6 && juneList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 7 && julyList.push(e.Field.money));\n      months.map(\n        (e) => e.selectedMonth === 8 && augustList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 9 && septemberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 10 && octoberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 11 && novemberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 12 && decemberList.push(e.Field.money)\n      );\n    }\n\n    const reducer = (sum: number, currentValue: number) => sum + currentValue;\n    if (januaryList.length) {\n      setJanuary(januaryList.reduce(reducer));\n    }\n    if (februaryList.length) {\n      setFebruary(februaryList.reduce(reducer));\n    }\n    if (marchList.length) {\n      setMarch(marchList.reduce(reducer));\n    }\n    if (aprilList.length) {\n      setApril(aprilList.reduce(reducer));\n    }\n    if (mayList.length) {\n      setMay(mayList.reduce(reducer));\n    }\n    if (juneList.length) {\n      setJune(juneList.reduce(reducer));\n    }\n    if (julyList.length) {\n      setJuly(julyList.reduce(reducer));\n    }\n    if (augustList.length) {\n      setAugust(augustList.reduce(reducer));\n    }\n    if (septemberList.length) {\n      setSeptember(septemberList.reduce(reducer));\n    }\n    if (octoberList.length) {\n      setOctober(octoberList.reduce(reducer));\n    }\n    if (novemberList.length) {\n      setNovember(novemberList.reduce(reducer));\n    }\n    if (decemberList.length) {\n      setDecember(decemberList.reduce(reducer));\n    }\n  }, [months]);\n  return [\n    {\n      january,\n      february,\n      march,\n      april,\n      may,\n      june,\n      july,\n      august,\n      september,\n      october,\n      november,\n      december,\n    },\n  ] as const;\n}\n","import React, { FC } from \"react\";\n\nimport { Form } from \"./form\";\nimport CountUp from \"react-countup\";\nimport styles from \"./home.module.css\";\nimport Header from \"../../organisms/Header\";\nimport { Tabel } from \"./tabel\";\nimport { useFunctions } from \"../../../functions/useFunctions\";\nimport Graph from \"../Graph\";\nimport firebase from \"../../../firebase\";\nexport interface moneyField {\n  money: number;\n  description: string;\n  type: string;\n  createdAt: firebase.firestore.FieldValue;\n  day: any;\n  id: string;\n  category: string;\n}\n\nexport const Home: FC = () => {\n  const [functionsHome] = useFunctions();\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={styles.home}>\n        <div className={styles.homeHeader}>\n          <div className={styles.body}>\n            <div className={styles.Expenses}>\n              <h1>Expenses</h1>\n              <p>\n                My expence is ¥\n                <span className={styles.expence}>\n                  {functionsHome.expence && (\n                    <CountUp\n                      start={0}\n                      end={functionsHome.expence}\n                      duration={2.5}\n                      separator=\",\"\n                    />\n                  )}\n                </span>\n              </p>\n              <div className={styles.formArea}>\n                <Form />\n              </div>\n            </div>\n          </div>\n          <div>\n            <Graph />\n          </div>\n        </div>\n        {/* 画面半分の収入/支出のテーブルを作成 */}\n        <Tabel budget={functionsHome.budget} />\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from 'react'\nimport styles from \"./spinner.module.css\"\n\nexport const Spinner = () => <div className={styles.loader}>loading...</div>;\nexport default Spinner;\n","import React from \"react\";\nimport firebase from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function useAuthentication() {\n  const history = useHistory();\n\n  const db = firebase.firestore();\n  const ref = db.collection(\"User\");\n\n  //すでにログインしているユーザーを識別する\n  const checkAuthentication = () => {\n    firebase.auth().onAuthStateChanged(async (usr: firebase.User | null) => {\n      if (usr) {\n        history.push(`/home`);\n      }\n    });\n  };\n\n  return [{ checkAuthentication, ref }] as const;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormControl, FormLabel } from \"@chakra-ui/core\";\nimport firebase from \"../../../firebase\";\nimport { Button } from \"@chakra-ui/core\";\nimport styles from \"./signup.module.css\";\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport Spinner from \"../../atoms/Spinner\";\nimport { useAuthentication } from \"../../../functions/useAuthentication\";\n\nconst Index: React.FC = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [useAuthenticationContents] = useAuthentication();\n  useEffect(() => {\n    useAuthenticationContents.checkAuthentication();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"Emailがおかしいです\")\n            .required(\"Emailは必須になってます\"),\n          password: Yup.string()\n            .min(6, \"パスワードは6文字必要です\")\n            .required(\"パスワードは必須になってます\"),\n        })}\n        onSubmit={async (fields) => {\n          setLoading(true);\n\n          const email = fields.email;\n          const password = fields.password;\n          return firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(async (res) => {\n              const myUserID = {\n                userID: [res.user?.uid],\n                name: \"kaito\",\n              };\n\n              await useAuthenticationContents.ref.add(myUserID);\n            })\n            .then(() => {\n              history.push(`/home`);\n            })\n            .catch((err) => {\n              alert(\"きちんと入力してください\");\n              setLoading(false);\n              console.log(err);\n            });\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.formWrap}>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  styles.formimput +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"fname\">password</FormLabel>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  styles.formimput +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            {!loading ? (\n              <Button\n                type=\"submit\"\n                variantColor=\"green\"\n                className={styles.register}\n              >\n                新規登録{\" \"}\n              </Button>\n            ) : (\n              <Spinner />\n            )}\n            <p>\n              アカウントをお持ちの方は<Link to=\"/signin\">こちら</Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormControl, FormLabel } from \"@chakra-ui/core\";\nimport firebase from \"../../../firebase\";\nimport { Button } from \"@chakra-ui/core\";\nimport styles from \"./signin.module.css\";\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport Spinner from \"../../atoms/Spinner\";\nimport { useAuthentication } from \"../../../functions/useAuthentication\";\nconst Index: React.FC = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [getIdToken] = useAuthentication();\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"Emailがおかしいです\")\n            .required(\"Emailは必須になってます\"),\n          password: Yup.string()\n            .min(6, \"パスワードは6文字必要です\")\n            .required(\"パスワードは必須になってます\"),\n        })}\n        onSubmit={(fields) => {\n          const email = fields.email;\n          const password = fields.password;\n          setLoading(true);\n          firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((res) => {\n              history.push(`/home`);\n              console.log(res);\n            })\n            .catch((err) => {\n              alert(\"何か間違ってるんじゃないですカァー？\");\n              console.log(err);\n              setLoading(false);\n            });\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.formWrap}>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  styles.formimput +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"fname\">password</FormLabel>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  styles.formimput +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            {!loading ? (\n              <Button\n                type=\"submit\"\n                variantColor=\"green\"\n                className={styles.register}\n              >\n                ログイン{\" \"}\n              </Button>\n            ) : (\n              <Spinner />\n            )}\n            <p>\n              アカウントをお持ちでない方は<Link to=\"/\">こちら</Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, theme } from \"@chakra-ui/core\";\nimport { Home } from \"./components/pages/Home\";\nimport SignUp from \"./components/pages/Signup\";\nimport SignIn from \"./components/pages/Signin\";\nimport \"antd/dist/antd.css\";\nimport Graph from \"./components/pages/Graph\";\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Switch>\n          <Route exact={true} component={Home} path=\"/home\" />\n          <Route exact path=\"/\" component={SignUp} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/graph\" component={Graph} />\n        </Switch>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"form_calendar__2oy5r\",\"mui-auto-fill-cancel\":\"form_mui-auto-fill-cancel__3Jg70\",\"coment\":\"form_coment__3ql2v\",\"modalFormArea\":\"form_modalFormArea__2ljaR\",\"modalFormH1\":\"form_modalFormH1__tUzhk\",\"styledBtn\":\"form_styledBtn__2b4HT\",\"center\":\"form_center__2iimi\",\"flex\":\"form_flex__QgHuO\",\"styledInput\":\"form_styledInput__Sct6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"signup_formWrap__1UEYf\",\"form\":\"signup_form__1eR3H\",\"register\":\"signup_register__2nKdD\",\"invalid\":\"signup_invalid__1UHlN\",\"formimput\":\"signup_formimput__zvaAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"signin_formWrap__2UYIc\",\"form\":\"signin_form__2B677\",\"register\":\"signin_register__89btB\",\"invalid\":\"signin_invalid__27g_o\",\"formimput\":\"signin_formimput__7giRA\"};"],"sourceRoot":""}