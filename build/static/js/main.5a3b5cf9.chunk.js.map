{"version":3,"sources":["components/pages/Home/form.module.css","components/organisms/Header/header.module.css","components/pages/Income/index.module.css","components/pages/Home/home.module.css","components/pages/Graph/graph.module.css","components/atoms/Spinner/spinner.module.css","components/pages/Home/tabel.module.css","firebase.tsx","functions/useFunctions.tsx","components/pages/Home/form.tsx","components/atoms/Logo/index.tsx","components/organisms/Header/index.tsx","functions/useGetUid.tsx","components/pages/Home/tabelContentsDay.tsx","components/pages/Home/tabelContentsDescription.tsx","components/pages/Home/tabelContentsMoney.tsx","components/pages/Home/tabelContentsCategory.tsx","components/pages/Home/tabelContentsDelete.tsx","components/pages/Home/editableFields.tsx","components/molecules/pagination/index.tsx","components/pages/Home/tabel.tsx","components/pages/Graph/index.tsx","functions/useGraphFunctions.tsx","components/pages/Home/index.tsx","components/atoms/Spinner/index.tsx","functions/useAuthentication.tsx","components/pages/Signup/index.tsx","components/pages/Signin/index.tsx","components/pages/Income/index.tsx","App.tsx","index.tsx","components/pages/Signup/signup.module.css","components/pages/Signin/signin.module.css"],"names":["module","exports","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","useFunctions","useState","budget","setBudget","income","setIncome","expence","setExpence","totalBudget","setTotalBudget","currentUserId","setCurrentUserId","bankID","setbankID","month","Date","getMonth","ref","firestore","collection","reducer","sum","currentValue","useEffect","auth","onAuthStateChanged","usr","a","myUid","uid","where","onSnapshot","querySnapshot","forEach","bankFields","id","doc","orderBy","storeBudget","storeIncome","storeExpence","docs","showBudget","data","push","type","day","toDate","incomeMoney","money","sumMoney","reduce","expenceMoney","decMoney","Form","text","setText","setType","setMoney","date","setDate","getBankID","setGetBankID","open","setOpen","usersDocs","contens","userID","includes","currentDay","getDate","onClick","visible","onCancel","footer","key","trim","sendMoney","description","createdAt","Timestamp","now","uuidv1","category","add","alert","className","styles","modalFormArea","coment","onChange","calendar","flex","value","event","target","styledInput","placeholder","moneyStore","Number","index","style","color","paddingLeft","Index","header","linkWrap","link","to","signOut","useGetUid","TabelContentsArea","props","isEditing","setIsEditing","isHover","setIsHover","changedDay","setChangedDay","getUserFiledsID","setGetUserFiledsID","userDocs","userContents","onMouseEnter","onMouseLeave","EditOutlined","required","styledButton","update","setTimeout","changedDescription","setChangedDescription","autoFocus","e","changedMoney","setChangedMoney","exp","inc","changedCategory","setChangedCategory","confirm","Modal","DeleteOutlined","title","onOk","delete","console","log","EditableFields","defaultCurrent","total","maxNum","defaultPageSize","numEachPage","Tabel","minValue","setMinValue","maxValue","setMaxValue","setMaxNum","length","styledTable","styledTr","slice","map","t","CurrentMonth","CurrentDay","Curentdate","Graph","useGraph","months","setMonths","january","setJanuary","february","setFebruary","march","setMarch","april","setApril","may","setMay","june","setJune","july","setJuly","august","setAugust","september","setSeptember","october","setOctober","november","setNovember","december","setDecember","expenceArray","expenceMonths","januaryList","februaryList","marchList","aprilList","mayList","juneList","julyList","augustList","septemberList","octoberList","novemberList","decemberList","Field","selectedMonth","useGraphFunctions","getExpenceMonth","dataGraph","支出","graph","width","height","margin","top","right","bottom","left","dataKey","stroke","barSize","fillOpacity","fill","Home","functionsHome","Fragment","home","homeHeader","formArea","Spinner","loader","useAuthentication","history","useHistory","checkAuthentication","loading","setLoading","useAuthenticationContents","initialValues","email","password","validationSchema","Yup","shape","min","onSubmit","fields","createUserWithEmailAndPassword","then","res","myUserID","user","name","catch","err","errors","touched","formWrap","FormControl","form","FormLabel","htmlFor","formimput","component","invalid","Button","variantColor","register","signInWithEmailAndPassword","cx","require","attack","setAttack","hp","setHp","incantation","setIncantation","lv","setIndex","comment","setComment","functionContents","submitHandler","fightHandler","Wrapper","incomeArea","status","statusTtl","commendLi","statusPlayer","enemy","enemyImg","enemyAtaack","src","img","strokeColor","percent","saveMoney","commendTtl","commend","modalIncomeFormArea","message","App","ThemeProvider","theme","exact","path","SignUp","SignIn","Income","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a3b5cf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coment\":\"form_coment__3ql2v\",\"day\":\"form_day__127B9\",\"title\":\"form_title__1qBDW\",\"modalFormArea\":\"form_modalFormArea__2ljaR\",\"modalIncomeFormArea\":\"form_modalIncomeFormArea__1lo9B\",\"modalFormH1\":\"form_modalFormH1__tUzhk\",\"styledBtn\":\"form_styledBtn__2b4HT\",\"center\":\"form_center__2iimi\",\"flex\":\"form_flex__QgHuO\",\"styledInput\":\"form_styledInput__Sct6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2IyQv\",\"linkWrap\":\"header_linkWrap__32IDx\",\"link\":\"header_link__k9dCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"Income_flex__30EDb\",\"incomeArea\":\"Income_incomeArea__22n5I\",\"status\":\"Income_status__3zpr5\",\"statusTtl\":\"Income_statusTtl__18wiK\",\"statusPlayer\":\"Income_statusPlayer__3O6zo\",\"saveMoney\":\"Income_saveMoney__log5J\",\"message\":\"Income_message__3SzjZ\",\"Wrapper\":\"Income_Wrapper__ei1p5\",\"enemy\":\"Income_enemy__1Clc2\",\"name\":\"Income_name__3tYA4\",\"commendTtl\":\"Income_commendTtl__3veAj\",\"commend\":\"Income_commend__3yyV_\",\"hp\":\"Income_hp__2Q7BW\",\"enemyImg\":\"Income_enemyImg__2cWez\",\"commendLi\":\"Income_commendLi__vOe7b\",\"enemyAtaack\":\"Income_enemyAtaack__2-W4m\",\"damage\":\"Income_damage__3YQKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__2sljt\",\"homeHeader\":\"home_homeHeader__3YDvN\",\"body\":\"home_body__1HsEX\",\"formArea\":\"home_formArea__25Vpp\",\"modalFormArea\":\"home_modalFormArea__1iYMp\",\"modalFormH1\":\"home_modalFormH1__3pgRb\",\"totalIncome\":\"home_totalIncome__1qGcG\",\"Expenses\":\"home_Expenses__1DzCp\",\"expence\":\"home_expence__2lSnr\",\"income\":\"home_income__1-_ta\",\"delete\":\"home_delete__2Y1hw\",\"List\":\"home_List__2jEcE\",\"tab\":\"home_tab__2Xcsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"graph_graph__2DoHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__29uiQ\",\"float\":\"spinner_float__1PkYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styledTable\":\"tabel_styledTable__lJnSw\",\"styledTr\":\"tabel_styledTr__3DPhL\",\"activeRow\":\"tabel_activeRow__200GZ\",\"styledh1\":\"tabel_styledh1__3mV_w\",\"styledButton\":\"tabel_styledButton__3JMPN\",\"styledInput\":\"tabel_styledInput__2JfB_\",\"inc\":\"tabel_inc__3Wvzy\",\"exp\":\"tabel_exp__2e4w9\"};","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst app = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n};\nfirebase.initializeApp(app);\nexport const db = firebase.firestore();\n\nexport default firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\n\nexport function useFunctions() {\n  const [budget, setBudget] = useState<firebase.firestore.DocumentData>();\n  const [income, setIncome] = useState<number>();\n  const [expence, setExpence] = useState<number>();\n  const [totalBudget, setTotalBudget] = useState<number>();\n  const [currentUserId, setCurrentUserId] = useState<number | string>();\n  const [bankID, setbankID] = useState<string>();\n  const d = new Date();\n  const month = d.getMonth() + 1;\n  const ref = firebase.firestore().collection(\"User\");\n\n  const reducer = (sum: number, currentValue: number) => sum + currentValue;\n  // 自分のユーザー登録をしているDocsの取得\n  useEffect(() => {\n    return firebase\n      .auth()\n      .onAuthStateChanged(async (usr: firebase.User | null) => {\n        if (!usr) {\n        } else {\n          // 今ログインをしている人のuidを確認する→このuidを元に自分の登録した中身を参照する。\n          const myUid = usr.uid;\n          setCurrentUserId(myUid);\n          // 自分のuidを参考にdocIDの取得\n          ref\n            .where(\"userID\", \"array-contains\", myUid)\n            .onSnapshot((querySnapshot: firebase.firestore.QuerySnapshot) => {\n              querySnapshot.forEach((bankFields) => {\n                setbankID(bankFields.id);\n              });\n            });\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (bankID) {\n      // 自分が保存した中身を取得する。\n      ref\n        .doc(bankID)\n        .collection(\"bank\")\n        .orderBy(\"createdAt\", \"desc\")\n        .onSnapshot((querySnapshot: firebase.firestore.DocumentData) => {\n          let storeBudget: firebase.firestore.DocumentData[] = [];\n          let storeIncome: number[] = [];\n          let storeExpence: number[] = [];\n          querySnapshot.forEach((docs: firebase.firestore.DocumentData) => {\n            const showBudget = docs.data();\n            storeBudget.push(showBudget);\n\n            //収入の中身を足す\n            if (\n              showBudget.type === \"inc\" &&\n              showBudget.day.toDate().getMonth() + 1 === month\n            ) {\n              const incomeMoney: number = showBudget.money;\n              storeIncome.push(incomeMoney);\n              const sumMoney = storeIncome.reduce(reducer);\n              //足された収入の中身をstateで管理\n              setIncome(sumMoney);\n            }\n            //支出の中身を足す\n            else if (\n              showBudget.type === \"exp\" &&\n              showBudget.day.toDate().getMonth() + 1 === month\n            ) {\n              const expenceMoney: number = showBudget.money;\n              storeExpence.push(expenceMoney);\n              const decMoney = storeExpence.reduce(reducer);\n              //足された支出の中身をstateで管理\n              setExpence(decMoney);\n            }\n          });\n\n          if (storeBudget) {\n            setBudget(storeBudget);\n          }\n        });\n    }\n  }, [bankID]);\n\n  // 収入と支出を足す\n  useEffect(() => {\n    if (income && expence) {\n      setTotalBudget(income - expence);\n    }\n  }, [income, expence]);\n\n  return [\n    {\n      bankID,\n      totalBudget,\n      income,\n      expence,\n      budget,\n      setBudget,\n      setExpence,\n      currentUserId,\n    },\n  ] as const;\n}\n","import React, { useState, FC, useEffect } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport styles from \"./form.module.css\";\nimport firebase from \"../../../firebase\";\nimport { moneyField } from \"./index\";\n\nimport { Modal, Button } from \"antd\";\nimport { useFunctions } from \"../../../functions/useFunctions\";\nexport const Form: FC = ({}) => {\n  const [text, setText] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"exp\");\n  const [money, setMoney] = useState<number>(0);\n  const [date, setDate] = useState(new Date());\n  const [getBankID, setGetBankID] = useState<string>();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [functionContents] = useFunctions();\n  const currentUserId = functionContents.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  const dateChange = (date: Date) => {\n    const detailDate = date;\n    setDate(detailDate);\n  };\n\n  const submitHandler = () => {\n    if (text.trim() !== \"\") {\n      const sendMoney: moneyField = {\n        money,\n        description: text,\n        type,\n        createdAt: firebase.firestore.Timestamp.now(),\n        day: date,\n        id: uuidv1(),\n        category: \"\",\n      };\n      if (getBankID) {\n        ref.doc(getBankID).collection(\"bank\").add(sendMoney);\n        setText(\"\");\n        setMoney(0);\n        setOpen(false);\n      }\n    } else {\n      alert(\"本文が入力されてません\");\n    }\n  };\n\n  const month = date.getMonth() + 1;\n  const currentDay = date.getDate();\n  return (\n    <div>\n      <Button onClick={handleOpen}>支出追加</Button>\n      <Modal\n        visible={open}\n        onCancel={handleClose}\n        footer={[\n          <Button key=\"submit\" type=\"default\" onClick={submitHandler}>\n            投稿する\n          </Button>,\n        ]}\n      >\n        <div className={styles.modalFormArea}>\n          <div>\n            <span className={styles.coment}>Day</span>\n            <DatePicker onChange={dateChange} className={styles.calendar} />\n            {month}月{currentDay}日\n          </div>\n          <div className={styles.flex}>\n            <div>\n              <select\n                value={type}\n                onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                  setType(event.target.value);\n                }}\n              >\n                <option value=\"exp\">-</option>\n              </select>\n            </div>\n            <div>\n              <input\n                className={styles.styledInput}\n                type=\"text\"\n                placeholder=\"Add description\"\n                value={text}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setText(event.target.value);\n                }}\n              />\n              <input\n                className={styles.styledInput}\n                type=\"number\"\n                placeholder=\"200\"\n                value={money}\n                onChange={(\n                  event: React.ChangeEvent<\n                    HTMLTextAreaElement | HTMLInputElement\n                  >\n                ) => {\n                  const moneyStore: number = Number(event.target.value);\n                  setMoney(moneyStore);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function index() {\n  return <div style={{ color: \"#fff\", paddingLeft: \"10px\" }}>kaiBank</div>;\n}\n","import React from \"react\";\nimport Logo from \"../../atoms/Logo\";\nimport styles from \"./header.module.css\";\nimport { Link } from \"react-router-dom\";\nimport * as firebase from \"firebase/app\";\n\nexport default function Index() {\n  const logOut = () => {\n    alert(\"ログアウトします\");\n    firebase.auth().signOut();\n  };\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <Logo />\n        <div className={styles.linkWrap}>\n          <li>\n            <Link className={styles.link} to={`/home`}>\n              ホーム\n            </Link>\n          </li>\n          <li>\n            <Link className={styles.link} to=\"/income\">\n              予算\n            </Link>\n          </li>\n          <li>\n            <Link className={styles.link} to=\"/\" onClick={logOut}>\n              {\" \"}\n              ログアウト\n            </Link>\n          </li>\n        </div>\n      </header>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\n\nexport function useGetUid() {\n  const [currentUserId, setCurrentUserId] = useState<number | string>();\n\n  useEffect(() => {\n    return firebase\n      .auth()\n      .onAuthStateChanged(async (usr: firebase.User | null) => {\n        if (!usr) {\n        } else {\n          const myUid = usr.uid;\n          setCurrentUserId(myUid);\n        }\n      });\n  }, []);\n\n  return [\n    {\n      currentUserId,\n    },\n  ] as const;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\nimport DatePicker from \"react-datepicker\";\nexport default function TabelContentsArea(props: { day: string; id: string }) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [changedDay, setChangedDay] = useState<Date>();\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  const dateChange = (date: Date) => {\n    const detailDate = date;\n    setChangedDay(detailDate);\n  };\n\n  useEffect(() => {\n    let useBankID: string;\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          useBankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ day: changedDay });\n\n    // 保存完了\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.day}\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <DatePicker required onChange={dateChange} className={styles.calendar} />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\nexport default function TabelContentsArea(props: {\n  description: string;\n  id: string;\n}) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [changedDescription, setChangedDescription] = useState<string>(\n    props.description\n  );\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  // ユーザー情報が自分かを確認する\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n  // 自分がアップデートしたい箇所IDを取得する\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    // アップデート開始\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ description: changedDescription });\n    // 保存完了\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.description}\n\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <input\n        autoFocus\n        onChange={(e) => setChangedDescription(e.target.value)}\n        value={changedDescription}\n        className={styles.styledInput}\n      />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\nexport default function TabelContentsArea(props: {\n  money: number;\n  id: string;\n  type: string;\n}) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [changedMoney, setChangedMoney] = useState<number>(props.money);\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  useEffect(() => {\n    let useBankID: string;\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          useBankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  // 自分がアップデートしたい箇所IDを取得する\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ money: changedMoney });\n\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.type === \"exp\" ? (\n          <span className={styles.exp}>-{props.money}</span>\n        ) : (\n          <span className={styles.inc}>{props.money}</span>\n        )}\n\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <input\n        autoFocus\n        type=\"number\"\n        onChange={(e) => setChangedMoney(Number(e.target.value))}\n        value={changedMoney}\n        className={styles.styledInput}\n      />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport styles from \"./tabel.module.css\";\nimport firebase from \"../../../firebase\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nexport default function TabelContentsArea(props: {\n  category: string;\n  id: string;\n}) {\n  const [isEditing, setIsEditing] = useState<boolean>(true);\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const [getBankID, setGetBankID] = useState<string>();\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [changedCategory, setChangedCategory] = useState<string>(\n    props.category\n  );\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  // 自分がアップデートしたい箇所IDを取得する\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    ref\n      .doc(getBankID)\n      .collection(\"bank\")\n      .doc(getUserFiledsID)\n      .update({ category: changedCategory });\n\n    setTimeout(() => {\n      setIsEditing(true);\n    }, 1000);\n  };\n\n  return isEditing ? (\n    <>\n      <th\n        onMouseEnter={() => setIsHover(true)}\n        onMouseLeave={() => setIsHover(false)}\n      >\n        {props.category}\n\n        {isHover && <EditOutlined onClick={() => setIsEditing(false)} />}\n      </th>\n    </>\n  ) : (\n    <th>\n      <input\n        required\n        autoFocus\n        onChange={(e) => setChangedCategory(e.target.value)}\n        value={changedCategory}\n        className={styles.styledInput}\n      />\n      <button className={styles.styledButton} onClick={handleClick}>\n        保存\n      </button>\n    </th>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { useGetUid } from \"../../../functions/useGetUid\";\nimport firebase from \"../../../firebase\";\n\nconst { confirm } = Modal;\nexport default function TabelContentsArea(props: { id: string }) {\n  const [getBankID, setGetBankID] = useState<string>();\n\n  const [getUserFiledsID, setGetUserFiledsID] = useState<string>();\n  const [functions] = useGetUid();\n  const currentUserId = functions.currentUserId;\n  const ref = firebase.firestore().collection(\"User\");\n\n  useEffect(() => {\n    let useBankID: string;\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          useBankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  useEffect(() => {\n    if (getBankID) {\n      ref\n        .doc(getBankID)\n        .collection(\"bank\")\n        .onSnapshot(async (userDocs: firebase.firestore.DocumentData) => {\n          await userDocs.forEach(\n            (userContents: firebase.firestore.DocumentData) => {\n              if (userContents.data().id === props.id) {\n                setGetUserFiledsID(userContents.id);\n              }\n            }\n          );\n        });\n    }\n  }, [getBankID]);\n\n  const handleClick = () => {\n    confirm({\n      title: \"Do You Want to delete...?\",\n\n      onOk() {\n        ref.doc(getBankID).collection(\"bank\").doc(getUserFiledsID).delete();\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n  return (\n    <>\n      <th>\n        <DeleteOutlined onClick={handleClick} />\n      </th>\n    </>\n  );\n}\n","import React, { FC } from \"react\";\n\nimport { moneyField } from \"./index\";\nimport TabelContentsDay from \"./tabelContentsDay\";\nimport TabelContentsDescription from \"./tabelContentsDescription\";\nimport TabelContentsMoney from \"./tabelContentsMoney\";\nimport TabelContentsCategory from \"./tabelContentsCategory\";\nimport TabelContentsDelte from \"./tabelContentsDelete\";\nexport const EditableFields: FC<moneyField> = ({\n  day,\n  description,\n  money,\n  category,\n  id,\n  type,\n}) => {\n  return (\n    <>\n      <TabelContentsDay day={day} id={id} />\n      <TabelContentsDescription description={description} id={id} />\n      <TabelContentsMoney money={money} id={id} type={type} />\n      <TabelContentsCategory\n        category={category ? category : \"未記入\"}\n        id={id}\n      />\n      <TabelContentsDelte id={id} />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Pagination } from \"antd\";\n\ninterface Props {\n  onChange: (page: number, pageSize?: number | undefined) => void;\n  numEachPage: number;\n  maxNum: number;\n}\n\nexport default function Index(props: Props) {\n  return (\n    <div>\n      <Pagination\n        defaultCurrent={1}\n        total={props.maxNum}\n        onChange={props.onChange}\n        defaultPageSize={props.numEachPage}\n      />\n    </div>\n  );\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { EditableFields } from \"./editableFields\";\nimport { moneyField } from \"./index\";\nimport Pegination from \"../../molecules/pagination\";\nimport styles from \"./tabel.module.css\";\n\nexport const Tabel: FC<firebase.firestore.DocumentData> = ({ budget }) => {\n  const numEachPage = 4;\n  const [minValue, setMinValue] = useState<number>(0);\n  const [maxValue, setMaxValue] = useState<number>(numEachPage);\n  const [maxNum, setMaxNum] = useState<number>(0);\n  useEffect(() => {\n    if (budget) {\n      setMaxNum(budget.length);\n    }\n  }, [budget]);\n\n  const handleChange = (value: number) => {\n    setMinValue((value - 1) * numEachPage);\n    setMaxValue(value * numEachPage);\n  };\n\n  return (\n    <div>\n      <>\n        <table className={styles.styledTable}>\n          <tbody>\n            <tr className={styles.styledTr}>\n              <th>日付</th>\n              <th>内容</th>\n              <th>金額</th>\n              <th>_φ(･_･</th>\n              <th>削除</th>\n            </tr>\n          </tbody>\n          <tbody>\n            {budget &&\n              budget.slice(minValue, maxValue).map((t: moneyField) => {\n                const CurrentMonth = t.day.toDate().getMonth() + 1;\n                const CurrentDay = t.day.toDate().getDate();\n                const Curentdate: string = `${CurrentMonth}月${CurrentDay}日`;\n\n                return (\n                  <tr key={t.id} className={styles.styledTable}>\n                    <EditableFields\n                      day={Curentdate}\n                      id={t.id || \"0\"}\n                      description={t.description}\n                      money={t.money}\n                      createdAt={t.createdAt}\n                      type={t.type}\n                      category={t.category}\n                    />\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n        <Pegination\n          onChange={handleChange}\n          numEachPage={numEachPage}\n          maxNum={maxNum}\n        />\n      </>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport styles from \"./graph.module.css\";\nimport { useGraphFunctions } from \"../../../functions/useGraphFunctions\";\nexport default function Graph() {\n  const [getExpenceMonth] = useGraphFunctions();\n\n  const dataGraph = [\n    { month: \"1月\", 支出: getExpenceMonth.january },\n    { month: \"2月\", 支出: getExpenceMonth.february },\n    { month: \"3月\", 支出: getExpenceMonth.march },\n    { month: \"4月\", 支出: getExpenceMonth.april },\n    { month: \"5月\", 支出: getExpenceMonth.may },\n    { month: \"6月\", 支出: getExpenceMonth.june },\n    { month: \"7月\", 支出: getExpenceMonth.july },\n    { month: \"8月\", 支出: getExpenceMonth.august },\n    { month: \"9月\", 支出: getExpenceMonth.september },\n    { month: \"10月\", 支出: getExpenceMonth.october },\n    { month: \"11月\", 支出: getExpenceMonth.november },\n    { month: \"12月\", 支出: getExpenceMonth.december },\n  ];\n  return (\n    <div className={styles.graph}>\n      <BarChart\n        width={1200}\n        height={300}\n        data={dataGraph}\n        margin={{ top: 20, right: 60, bottom: 0, left: 0 }}\n      >\n        <XAxis dataKey=\"month\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <CartesianGrid stroke=\"gray\" />\n        <Bar //棒グラフ\n          dataKey=\"支出\"\n          barSize={20}\n          stroke=\"gray\"\n          fillOpacity={1}\n          fill=\"pink\"\n        />\n      </BarChart>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nimport { useFunctions } from \"./useFunctions\";\nimport { moneyField } from \"../components/pages/Home\";\nexport function useGraphFunctions() {\n  const [useGraph] = useFunctions();\n  const [expence, setExpence] = useState<moneyField[]>();\n  const [months, setMonths] = useState<any[]>();\n  const [january, setJanuary] = useState<number>();\n  const [february, setFebruary] = useState<number>();\n  const [march, setMarch] = useState<number>();\n  const [april, setApril] = useState<number>();\n  const [may, setMay] = useState<number>();\n  const [june, setJune] = useState<number>();\n  const [july, setJuly] = useState<number>();\n  const [august, setAugust] = useState<number>();\n  const [september, setSeptember] = useState<number>();\n  const [october, setOctober] = useState<number>();\n  const [november, setNovember] = useState<number>();\n  const [december, setDecember] = useState<number>();\n  let expenceArray: moneyField[] = [];\n  let expenceMonths: any[] = [];\n  let januaryList: number[] = [];\n  let februaryList: number[] = [];\n  let marchList: number[] = [];\n  let aprilList: number[] = [];\n  let mayList: number[] = [];\n  let juneList: number[] = [];\n  let julyList: number[] = [];\n  let augustList: number[] = [];\n  let septemberList: number[] = [];\n  let octoberList: number[] = [];\n  let novemberList: number[] = [];\n  let decemberList: number[] = [];\n  useEffect(() => {\n    // expenceの中身を配列の中に保管する\n    if (useGraph.budget) {\n      useGraph.budget.map((Field: moneyField) => {\n        Field.type === \"exp\" && expenceArray.push(Field);\n      });\n      setExpence(expenceArray);\n    }\n  }, [useGraph.budget]);\n\n  useEffect(() => {\n    //その月の支出を追加する。\n    if (expence) {\n      expence.map((Field: moneyField) =>\n        expenceMonths.push({\n          selectedMonth: Field.day.toDate().getMonth() + 1,\n          Field,\n        })\n      );\n    }\n\n    setMonths(expenceMonths);\n  }, [expence]);\n\n  useEffect(() => {\n    if (months?.length) {\n      months.map(\n        (e) => e.selectedMonth === 1 && januaryList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 2 && februaryList.push(e.Field.money)\n      );\n      months.map((e) => e.selectedMonth === 3 && marchList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 4 && aprilList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 5 && mayList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 6 && juneList.push(e.Field.money));\n      months.map((e) => e.selectedMonth === 7 && julyList.push(e.Field.money));\n      months.map(\n        (e) => e.selectedMonth === 8 && augustList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 9 && septemberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 10 && octoberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 11 && novemberList.push(e.Field.money)\n      );\n      months.map(\n        (e) => e.selectedMonth === 12 && decemberList.push(e.Field.money)\n      );\n    }\n\n    const reducer = (sum: number, currentValue: number) => sum + currentValue;\n    if (januaryList.length) {\n      setJanuary(januaryList.reduce(reducer));\n    }\n    if (februaryList.length) {\n      setFebruary(februaryList.reduce(reducer));\n    }\n    if (marchList.length) {\n      setMarch(marchList.reduce(reducer));\n    }\n    if (aprilList.length) {\n      setApril(aprilList.reduce(reducer));\n    }\n    if (mayList.length) {\n      setMay(mayList.reduce(reducer));\n    }\n    if (juneList.length) {\n      setJune(juneList.reduce(reducer));\n    }\n    if (julyList.length) {\n      setJuly(julyList.reduce(reducer));\n    }\n    if (augustList.length) {\n      setAugust(augustList.reduce(reducer));\n    }\n    if (septemberList.length) {\n      setSeptember(septemberList.reduce(reducer));\n    }\n    if (octoberList.length) {\n      setOctober(octoberList.reduce(reducer));\n    }\n    if (novemberList.length) {\n      setNovember(novemberList.reduce(reducer));\n    }\n    if (decemberList.length) {\n      setDecember(decemberList.reduce(reducer));\n    }\n  }, [months]);\n  return [\n    {\n      january,\n      february,\n      march,\n      april,\n      may,\n      june,\n      july,\n      august,\n      september,\n      october,\n      november,\n      december,\n    },\n  ] as const;\n}\n","import React, { FC } from \"react\";\n\nimport { Form } from \"./form\";\n\nimport styles from \"./home.module.css\";\nimport Header from \"../../organisms/Header\";\nimport { Tabel } from \"./tabel\";\nimport { useFunctions } from \"../../../functions/useFunctions\";\nimport Graph from \"../Graph\";\nimport firebase from \"../../../firebase\";\nexport interface moneyField {\n  money: number;\n  description: string;\n  type: string;\n  createdAt: firebase.firestore.FieldValue;\n  day: any;\n  id: string;\n  category: string;\n}\n\nexport const Home: FC = () => {\n  const [functionsHome] = useFunctions();\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={styles.home}>\n        <div className={styles.homeHeader}>\n          <div>\n            <Graph />\n          </div>\n        </div>\n        {/* 画面半分の収入/支出のテーブルを作成 */}\n        <div className={styles.formArea}>\n          <Form />\n        </div>\n        <Tabel budget={functionsHome.budget} />\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from 'react'\nimport styles from \"./spinner.module.css\"\n\nexport const Spinner = () => <div className={styles.loader}>loading...</div>;\nexport default Spinner;\n","import React from \"react\";\nimport firebase from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function useAuthentication() {\n  const history = useHistory();\n\n  const db = firebase.firestore();\n  const ref = db.collection(\"User\");\n\n  //すでにログインしているユーザーを識別する\n  const checkAuthentication = () => {\n    firebase.auth().onAuthStateChanged(async (usr: firebase.User | null) => {\n      if (usr) {\n        history.push(`/home`);\n      }\n    });\n  };\n\n  return [{ checkAuthentication, ref }] as const;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormControl, FormLabel } from \"@chakra-ui/core\";\nimport firebase from \"../../../firebase\";\nimport { Button } from \"@chakra-ui/core\";\nimport styles from \"./signup.module.css\";\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport Spinner from \"../../atoms/Spinner\";\nimport { useAuthentication } from \"../../../functions/useAuthentication\";\n\nconst Index: React.FC = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [useAuthenticationContents] = useAuthentication();\n  useEffect(() => {\n    useAuthenticationContents.checkAuthentication();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"Emailがおかしいです\")\n            .required(\"Emailは必須になってます\"),\n          password: Yup.string()\n            .min(6, \"パスワードは6文字必要です\")\n            .required(\"パスワードは必須になってます\"),\n        })}\n        onSubmit={async (fields) => {\n          setLoading(true);\n\n          const email = fields.email;\n          const password = fields.password;\n          return firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(async (res) => {\n              const myUserID = {\n                userID: [res.user?.uid],\n                name: \"kaito\",\n              };\n\n              await useAuthenticationContents.ref.add(myUserID);\n            })\n            .then(() => {\n              history.push(`/home`);\n            })\n            .catch((err) => {\n              alert(\"きちんと入力してください\");\n              setLoading(false);\n              console.log(err);\n            });\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.formWrap}>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  styles.formimput +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"fname\">password</FormLabel>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  styles.formimput +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            {!loading ? (\n              <Button\n                type=\"submit\"\n                variantColor=\"green\"\n                className={styles.register}\n              >\n                新規登録{\" \"}\n              </Button>\n            ) : (\n              <Spinner />\n            )}\n            <p>\n              アカウントをお持ちの方は<Link to=\"/signin\">こちら</Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormControl, FormLabel } from \"@chakra-ui/core\";\nimport firebase from \"../../../firebase\";\nimport { Button } from \"@chakra-ui/core\";\nimport styles from \"./signin.module.css\";\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport Spinner from \"../../atoms/Spinner\";\nimport { useAuthentication } from \"../../../functions/useAuthentication\";\nconst Index: React.FC = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [getIdToken] = useAuthentication();\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"Emailがおかしいです\")\n            .required(\"Emailは必須になってます\"),\n          password: Yup.string()\n            .min(6, \"パスワードは6文字必要です\")\n            .required(\"パスワードは必須になってます\"),\n        })}\n        onSubmit={(fields) => {\n          const email = fields.email;\n          const password = fields.password;\n          setLoading(true);\n          firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((res) => {\n              history.push(`/home`);\n              console.log(res);\n            })\n            .catch((err) => {\n              alert(\"何か間違ってるんじゃないですカァー？\");\n              console.log(err);\n              setLoading(false);\n            });\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.formWrap}>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  styles.formimput +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            <FormControl className={styles.form}>\n              <FormLabel htmlFor=\"fname\">password</FormLabel>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  styles.formimput +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={styles.invalid}\n              />\n            </FormControl>\n            {!loading ? (\n              <Button\n                type=\"submit\"\n                variantColor=\"green\"\n                className={styles.register}\n              >\n                ログイン{\" \"}\n              </Button>\n            ) : (\n              <Spinner />\n            )}\n            <p>\n              アカウントをお持ちでない方は<Link to=\"/\">こちら</Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default Index;\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport Header from \"../../organisms/Header\";\nimport Logo from \"../../../Img/logo.png\";\nimport styles from \"./index.module.css\";\nimport { Progress } from \"antd\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport firebase from \"../../../firebase\";\nimport data from \"./data.json\";\nimport { moneyField } from \"../Home/index\";\nimport { useFunctions } from \"../../../functions/useFunctions\";\nconst cx = require(\"classnames\");\n\nexport default function Index() {\n  const [text, setText] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"inc\");\n  const [money, setMoney] = useState<number>(0);\n  const [date, setDate] = useState(new Date());\n  const [getBankID, setGetBankID] = useState<string>();\n  const [open, setOpen] = useState(false);\n  const [attack, setAttack] = useState<boolean>(false);\n  const [hp, setHp] = useState<number>(100);\n  const [incantation, setIncantation] = useState<string>(\"\");\n  const [lv, setLv] = useState<number>(1);\n  const [index, setIndex] = useState<number>(0);\n  const [comment, setComment] = useState<string>(`${data[index].name}が現れた`);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  console.log(hp);\n  const [functionContents] = useFunctions();\n  const currentUserId = functionContents.currentUserId;\n  const totalBudget = functionContents.totalBudget;\n  const ref = firebase.firestore().collection(\"User\");\n\n  useEffect(() => {\n    if (hp === 0 && data[index].name === \"冴えないサラリーマン\") {\n      setIndex(index + 1);\n      setHp(100);\n      setComment(\"冴えないサラリーマンを倒した\");\n    } else if (hp === 0 && data[index].name === \"バニーガールちゃん\") {\n      setIndex(index + 1);\n      setHp(100);\n      setComment(\"バニーガールちゃんを倒した\");\n    }\n  }, [hp]);\n  useEffect(() => {\n    ref.onSnapshot((usersDocs) => {\n      usersDocs.forEach((contens) => {\n        if (contens.data().userID[0].includes(currentUserId)) {\n          const bankID = contens.id;\n          setGetBankID(bankID);\n        }\n      });\n    });\n  }, [currentUserId]);\n\n  useEffect(() => {\n    if (attack && incantation !== \"\") {\n      setComment(incantation);\n      setIncantation(\"\");\n    }\n\n    setTimeout(() => {\n      if (incantation !== \"\") {\n        const attakNum = hp - 10;\n        setHp(attakNum);\n        setComment(`10のダメージ`);\n      }\n    }, 1000);\n\n    setTimeout(() => {\n      setAttack(false);\n      setComment(\"どうする？\");\n    }, 2000);\n  }, [attack]);\n\n  const submitHandler = () => {\n    if (text.trim() !== \"\") {\n      const sendMoney: moneyField = {\n        money,\n        description: text,\n        type,\n        createdAt: firebase.firestore.Timestamp.now(),\n        day: date,\n        id: uuidv1(),\n        category: \"\",\n      };\n      if (getBankID) {\n        ref.doc(getBankID).collection(\"bank\").add(sendMoney);\n        setText(\"\");\n        setMoney(0);\n        setOpen(false);\n        setAttack(true);\n      }\n    } else {\n      alert(\"本文が入力されてません\");\n    }\n  };\n  const fightHandler = () => {\n    setComment(\"喰らえ!21歳拳パンチ\");\n    setAttack(true);\n    const attakNum = hp - 5;\n    setHp(attakNum);\n    setTimeout(() => {\n      setComment(`5のダメージ`);\n    }, 1000);\n  };\n\n  return (\n    <div className={styles.Wrapper}>\n      <Header />\n      <div className={styles.flex}>\n        <div className={styles.incomeArea}>\n          <div className={styles.status}>\n            <ul className={styles.statusTtl}>\n              <li className={styles.commendLi}>名前</li>\n              <li className={styles.commendLi}>レベル</li>\n              <li className={styles.commendLi}>体力(残高)</li>\n            </ul>\n            <ul className={styles.statusPlayer}>\n              <li className={styles.commendLi}>かいかい</li>\n              <li className={styles.commendLi}>{lv}</li>\n              <li className={styles.commendLi}>\n                {totalBudget ? totalBudget : 1}\n              </li>\n            </ul>\n          </div>\n          <div className={styles.enemy}>\n            <h4 className={styles.name}>{data[index].name}</h4>\n            <img\n              className={cx(styles.enemyImg, attack && styles.enemyAtaack)}\n              src={`/Img/${data[index].img}`}\n            />\n            <Progress\n              style={{\n                width: \"50%\",\n              }}\n              strokeColor={{\n                \"0%\": \"red\",\n                \"100%\": \"pink\",\n              }}\n              status=\"active\"\n              percent={hp}\n            />\n          </div>\n          <div className={styles.flex}>\n            <div className={styles.saveMoney}>\n              <p className={styles.commendTtl}>かいかい</p>\n              <ul className={styles.commend}>\n                <li onClick={handleOpen}>▶︎呪文</li>\n                <Modal\n                  visible={open}\n                  onCancel={handleClose}\n                  footer={[\n                    <Button\n                      key=\"submit\"\n                      type=\"default\"\n                      onClick={() => {\n                        setIncantation(\"エクスプロォォージョンッ！！\");\n                        submitHandler();\n                      }}\n                    >\n                      エクスプロォォージョンッ！！\n                    </Button>,\n                    <Button\n                      key=\"submit\"\n                      type=\"default\"\n                      onClick={() => {\n                        setIncantation(\"ファイナルフラッシュ！！\");\n                        submitHandler();\n                      }}\n                    >\n                      ファイナルフラッシュ！！\n                    </Button>,\n                    <Button\n                      key=\"submit\"\n                      type=\"default\"\n                      onClick={() => {\n                        setIncantation(\"滅びのバーストストリーム\");\n                        submitHandler();\n                      }}\n                    >\n                      滅びのバーストストリーム！！\n                    </Button>,\n                    <Button\n                      key=\"submit\"\n                      type=\"default\"\n                      onClick={() => {\n                        setIncantation(\"秘技マジ卍\");\n                        submitHandler();\n                      }}\n                    >\n                      秘技マジ卍卍卍アタック！！\n                    </Button>,\n                  ]}\n                >\n                  <div className={styles.modalIncomeFormArea}>\n                    <div className={styles.flex}>\n                      <div>\n                        <input\n                          className={styles.styledInput}\n                          type=\"text\"\n                          placeholder=\"Add description\"\n                          value={text}\n                          onChange={(\n                            event: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setText(event.target.value);\n                          }}\n                        />\n                        <input\n                          className={styles.styledInput}\n                          type=\"number\"\n                          placeholder=\"200\"\n                          value={money}\n                          onChange={(\n                            event: React.ChangeEvent<\n                              HTMLTextAreaElement | HTMLInputElement\n                            >\n                          ) => {\n                            const moneyStore: number = Number(\n                              event.target.value\n                            );\n                            setMoney(moneyStore);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </Modal>\n                <li className={styles.commendLi} onClick={fightHandler}>\n                  戦う\n                </li>\n                <li className={styles.commendLi} onClick={fightHandler}>\n                  一撃\n                </li>\n                <li\n                  className={styles.commendLi}\n                  onClick={() => setComment(\"逃げちゃダメだ\")}\n                >\n                  逃げる\n                </li>\n              </ul>\n            </div>\n            <div className={styles.message}>\n              <p>{comment}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, theme } from \"@chakra-ui/core\";\nimport { Home } from \"./components/pages/Home\";\nimport SignUp from \"./components/pages/Signup\";\nimport SignIn from \"./components/pages/Signin\";\nimport \"antd/dist/antd.css\";\nimport Income from \"./components/pages/Income\";\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Switch>\n          <Route exact={true} component={Home} path=\"/home\" />\n          <Route exact path=\"/\" component={SignUp} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/income\" component={Income} />\n        </Switch>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"signup_formWrap__1UEYf\",\"form\":\"signup_form__1eR3H\",\"register\":\"signup_register__2nKdD\",\"invalid\":\"signup_invalid__1UHlN\",\"formimput\":\"signup_formimput__zvaAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"signin_formWrap__2UYIc\",\"form\":\"signin_form__2B677\",\"register\":\"signin_register__89btB\",\"invalid\":\"signin_invalid__27g_o\",\"formimput\":\"signin_formimput__7giRA\"};"],"sourceRoot":""}